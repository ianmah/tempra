import { ethers } from 'ethers';
export declare type ChainSpec = {
    chainId: `0x${string}`;
    chainName: string;
    rpcUrls: string[];
    nativeCurrency: {
        symbol: string;
        decimals: number;
        [unknown: string]: any;
    };
    blockExplorerUrls: string[];
    iconUrls?: string[];
    [unknown: string]: any;
};
export declare type BuiltinChainInfo = {
    spec: ChainSpec;
    defaultContract: `0x${string}`;
    opensea?: {
        baseUrl: string;
        chainName: string;
    };
};
export declare function toHexChainId(chainId: string | number | undefined): string;
export declare function toNumberChainId(chainId: string | number): number;
export declare function isChainBuiltin(chainId: string | number): boolean;
export declare function listBuiltinChains(): string[];
export declare function getBuiltinChain(chainId: string | number): BuiltinChainInfo | null;
export declare function switchChain(ethereum: ethers.providers.ExternalProvider, chainId: string): Promise<any>;
export declare function addChain(ethereum: ethers.providers.ExternalProvider, chainSpec: ChainSpec): Promise<any>;
export declare function switchOrAddChain(ethereum: ethers.providers.ExternalProvider, chainSpec: ChainSpec): Promise<{
    added: boolean;
}>;
